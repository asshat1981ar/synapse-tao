Starting TAO loop...
THINK: Planning sprint...
gemini [options]

Gemini CLI - Launch an interactive CLI, use -p/--prompt for non-interactive mode

Options:
  -m, --model                     Model  [string] [default: "gemini-2.5-pro"]
  -p, --prompt                    Prompt. Appended to input on stdin (if any).  [string]
  -i, --prompt-interactive        Execute the provided prompt and continue in interactive mode  [string]
  -s, --sandbox                   Run in sandbox?  [boolean]
      --sandbox-image             Sandbox image URI.  [string]
  -d, --debug                     Run in debug mode?  [boolean] [default: false]
  -a, --all-files                 Include ALL files in context?  [boolean] [default: false]
      --all_files                 Include ALL files in context?  [deprecated: Use --all-files instead. We will be removing --all_files in the coming weeks.] [boolean] [default: false]
      --show-memory-usage         Show memory usage in status bar  [boolean] [default: false]
      --show_memory_usage         Show memory usage in status bar  [deprecated: Use --show-memory-usage instead. We will be removing --show_memory_usage in the coming weeks.] [boolean] [default: false]
  -y, --yolo                      Automatically accept all actions (aka YOLO mode, see https://www.youtube.com/watch?v=xvFZjo5PgG0 for more details)?  [boolean] [default: false]
      --telemetry                 Enable telemetry? This flag specifically controls if telemetry is sent. Other --telemetry-* flags set specific values but do not enable telemetry on their own.  [boolean]
      --telemetry-target          Set the telemetry target (local or gcp). Overrides settings files.  [string] [choices: "local", "gcp"]
      --telemetry-otlp-endpoint   Set the OTLP endpoint for telemetry. Overrides environment variables and settings files.  [string]
      --telemetry-log-prompts     Enable or disable logging of user prompts for telemetry. Overrides settings files.  [boolean]
  -c, --checkpointing             Enables checkpointing of file edits  [boolean] [default: false]
      --experimental-acp          Starts the agent in ACP mode  [boolean]
      --allowed-mcp-server-names  Allowed MCP server names  [array]
  -e, --extensions                A list of extensions to use. If not provided, all extensions are used.  [array]
  -l, --list-extensions           List all available extensions and exit.  [boolean]
      --ide-mode                  Run in IDE mode?  [boolean]
      --proxy                     Proxy for gemini client, like schema://user:password@host:port  [string]
  -v, --version                   Show version number  [boolean]
  -h, --help                      Show help  [boolean]

Unknown arguments: json-file, jsonFile
Starting TAO loop...
THINK: Planning sprint...
gemini [options]

Gemini CLI - Launch an interactive CLI, use -p/--prompt for non-interactive mode

Options:
  -m, --model                     Model  [string] [default: "gemini-2.5-pro"]
  -p, --prompt                    Prompt. Appended to input on stdin (if any).  [string]
  -i, --prompt-interactive        Execute the provided prompt and continue in interactive mode  [string]
  -s, --sandbox                   Run in sandbox?  [boolean]
      --sandbox-image             Sandbox image URI.  [string]
  -d, --debug                     Run in debug mode?  [boolean] [default: false]
  -a, --all-files                 Include ALL files in context?  [boolean] [default: false]
      --all_files                 Include ALL files in context?  [deprecated: Use --all-files instead. We will be removing --all_files in the coming weeks.] [boolean] [default: false]
      --show-memory-usage         Show memory usage in status bar  [boolean] [default: false]
      --show_memory_usage         Show memory usage in status bar  [deprecated: Use --show-memory-usage instead. We will be removing --show_memory_usage in the coming weeks.] [boolean] [default: false]
  -y, --yolo                      Automatically accept all actions (aka YOLO mode, see https://www.youtube.com/watch?v=xvFZjo5PgG0 for more details)?  [boolean] [default: false]
      --telemetry                 Enable telemetry? This flag specifically controls if telemetry is sent. Other --telemetry-* flags set specific values but do not enable telemetry on their own.  [boolean]
      --telemetry-target          Set the telemetry target (local or gcp). Overrides settings files.  [string] [choices: "local", "gcp"]
      --telemetry-otlp-endpoint   Set the OTLP endpoint for telemetry. Overrides environment variables and settings files.  [string]
      --telemetry-log-prompts     Enable or disable logging of user prompts for telemetry. Overrides settings files.  [boolean]
  -c, --checkpointing             Enables checkpointing of file edits  [boolean] [default: false]
      --experimental-acp          Starts the agent in ACP mode  [boolean]
      --allowed-mcp-server-names  Allowed MCP server names  [array]
  -e, --extensions                A list of extensions to use. If not provided, all extensions are used.  [array]
  -l, --list-extensions           List all available extensions and exit.  [boolean]
      --ide-mode                  Run in IDE mode?  [boolean]
      --proxy                     Proxy for gemini client, like schema://user:password@host:port  [string]
  -v, --version                   Show version number  [boolean]
  -h, --help                      Show help  [boolean]

Unknown argument: json
Starting TAO loop...
THINK: Planning sprint...
Sprint planned successfully.
ACT: Executing tasks...
jq: parse error: Invalid numeric literal at line 1, column 7
All tasks executed.
BUILD & DEPLOY: Building and deploying application...
ðŸš€  Building Docker image â€¦
Starting TAO loop...
THINK: Planning sprint...
Sprint planned successfully.
ACT: Executing tasks...
jq: parse error: Invalid numeric literal at line 1, column 7
All tasks executed.
BUILD & DEPLOY: Building and deploying application...
ðŸš€  Building Docker image â€¦
Starting TAO loop...
THINK: Planning sprint...
[API Error: [{
  "error": {
    "code": 404,
    "message": "Requested entity was not found.",
    "errors": [
      {
        "message": "Requested entity was not found.",
        "domain": "global",
        "reason": "notFound"
      }
    ],
    "status": "NOT_FOUND"
  }
}
]]
